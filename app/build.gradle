apply plugin: 'com.android.application'

ext.appReleaseDir = ""
ext.appkey = ""

def loadProperties() {
    def proFile = file("../app/local.properties")
    Properties p = new Properties()
    proFile.withInputStream { stream->
        p.load(stream)
    }
    appReleaseDir = p.appReleaseDir
    appkey = p.appkey
//    appVersionCode = Integer.valueOf(p.appVersionCode)
//    appVersionName = p.appVersionName
}

loadProperties()

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.1"
    defaultConfig {
        applicationId "com.por.watermelon"
        minSdkVersion 18
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"
    }
    
        signingConfigs {
          releaseConfig {
            storeFile file(appkey)
            storePassword "oSzcK7fSXgehI43i"
            keyAlias "ztsq"
            keyPassword "oSzcK7fSXgehI43i"
        }
        debug{
           storeFile file("D:\\debug.keystore")
        }
    } 
    buildTypes {
        release {
         signingConfig signingConfigs.releaseConfig
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
        variant.outputs.each { output ->
          def apk = output.outputFile
          if (apk != null && apk.name.endsWith('.apk')) {
          //  def fileName = "kangxiaobai_v${defaultConfig.versionName}_${releaseTime()}_${variant.productFlavors[0].name}.apk"
            //output.outputFile = new File(apk.parent + "/package", "ztsq.apk")
            output.outputFile = new File(appReleaseDir + '/' + getDate(), "ztsq.apk")
          }
        }
      }
        }
          debug {
          zipAlignEnabled false
          shrinkResources false  //去除无用的资源
          minifyEnabled false //是否混淆
           signingConfig signingConfigs.debug
       }
    }
}


//获取时间戳
def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmm')
    return formattedDate
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(':mylibrary')
}
